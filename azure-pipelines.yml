# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: ubuntu-latest

steps:
#- task: UsePythonVersion@0
#  inputs:
#    versionSpec: '3.x'
#    addToPath: true
#    architecture: 'x64'
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    addToPath: true
    architecture: 'x64'

- script: |
    python -m venv antenv
    source antenv/bin/activate
    python -m pip install --upgrade pip
    pip install setup
    pip install --target="./.python_packages/lib/site-packages" -r ./requirements.txt
  workingDirectory: $(projectRoot)
  displayName: "Install requirements"

- task: ArchiveFiles@2
  inputs:
     rootFolderOrFile: '$(Build.SourcesDirectory)'
     includeRootFolder: false
     archiveType: 'zip'
     archiveFile: '$(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip'
     replaceExistingArchive: true
     verbose: # (no value); this input is optional

- publish: $(Build.ArtifactStagingDirectory)/Application$(Build.BuildId).zip
  displayName: 'Upload package'
  artifact: drop

jobs:
- deployment: DeploymentJob
pool:
  vmImage: ubuntu-latest
#environment: $(environmentName)
strategy:
  runOnce:
    deploy:
      steps:

      - task: UsePythonVersion@0
        inputs:
          versionSpec: '3.x'
          addToPath: true
          architecture: 'x64'
        displayName: 'Use Python version'

      - task: AzureWebApp@1
        displayName: 'Deploy Azure Web App : {{ webAppName }}'
        inputs:
          azureSubscription: 'nimesh-fttt'
          appType: 'webAppLinux'
          appName: 'ltipipelinepyapp01'
          package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
          startUpCommand: 'gunicorn --bind=0.0.0.0 --workers=4 startup:app'